--Question A LAB
SELECT ROUND (AVG(IMDB_SCORE), 2)
FROM MOVIE_DATA
WHERE TITLE_YEAR BETWEEN 2000 AND 2010;

--Question B LAB
SELECT title_year, count(TITLE_YEAR)
FROM MOVIE_DATA
GROUP BY Title_Year
ORDER BY TITLE_Year;


--Question C LAB
SELECT TITLE_YEAR, max(budget)
FROM MOVIE_DATA
GROUP BY TITLE_YEAR;


--Question D LAB
SELECT TITLE_YEAR, MIN(GROSS)
FROM MOVIE_DATA
WHERE GROSS IS NOT NULL
GROUP BY TITLE_YEAR
ORDER BY TITLE_YEAR DESC;

--QUESTION E LAB
SELECT LANGUAGE, COUNT(GROSS), SUM(GROSS) "TOTAL GROSS AMOUNT"
FROM MOVIE_DATA
GROUP BY LANGUAGE;

--QUESTION F LAB
SELECT TITLE_YEAR, COUNTRY, MAX(BUDGET)
FROM MOVIE_DATA
WHERE TITLE_YEAR IS NOT NULL
GROUP BY TITLE_YEAR, COUNTRY
ORDER BY COUNTRY, TITLE_YEAR DESC;

--QUESTION G LAB
SELECT TITLE_YEAR, COUNTRY, MAX(GROSS)
FROM MOVIE_DATA
WHERE TITLE_YEAR > 2000
AND TITLE_YEAR IS NOT NULL
GROUP BY TITLE_YEAR, COUNTRY;

--QUESTION H LAB
SELECT TITLE_YEAR, ROUND (AVG(BUDGET), 2) "AVG_BUDGET", ROUND (AVG(GROSS), 2) "AVG_GROSS"
FROM MOVIE_DATA
WHERE TITLE_YEAR > 2000
AND BUDGET IS NOT NULL
GROUP BY TITLE_YEAR
ORDER BY TITLE_YEAR, AVG(BUDGET), AVG(GROSS);

-- Start of Question Section 2:

--Question A
SELECT COUNT(*) AS "NUMBER OF ROWS"
FROM CUSTOMER_BASIC;

--QUESTION B and C
SELECT GENDER, COUNT(*)
FROM CUSTOMER_BASIC
GROUP BY GENDER;

--Question D
SELECT GENDER, ROUND (AVG(AGE), 2)
FROM CUSTOMER_BASIC
GROUP BY GENDER;
-- Question D Continued
SELECT GENDER, ROUND (Stddev(AGE), 2) "Standard Deviation for Age"
FROM CUSTOMER_BASIC
GROUP BY GENDER;

--QUESTION E
SELECT JOBCATEGORY, COUNT(JOBCATEGORY) "FREQ"
FROM CUSTOMER_BASIC
GROUP BY JOBCATEGORY
ORDER BY JOBCATEGORY DESC;

--QUESTION 2F
SELECT MARITALSTATUS, COUNT(AGE) "FREQ"
FROM CUSTOMER_BASIC
WHERE AGE >= 20
AND AGE <= 30
GROUP BY MARITALSTATUS
ORDER BY COUNT(AGE) DESC;

--Beginning of Question 3 A-D:

--QUESTION 3A
CREATE TABLE CustomerAll
SELECT CUSTOMER_BASIC.CUSTOMERID, CUSTOMER_BASIC.GENDER,
CUSTOMER_BASIC.AGE, CUSTOMER_BASIC.JOBCATEGORY,
FINANCE.HHINCOME, FINANCE.DEBTTOINCOMERATIO,
FINANCE.LOANDEFAULT, FINANCE.CARDTENURE
FROM CUSTOMER_BASIC
INNER JOIN FINANCE ON CUSTOMER_BASIC.CUSTOMERID = FINANCE.CUSTOMERID;

--QUESTION 3B
SELECT JOBCATEGORY, ROUND (Stddev(HHINCOME), 2 ), MAX(HHINCOME) AS MAXINCOME, MIN(HHINCOME) AS MININCOME FROM CUSTOMERALL
WHERE JOBCATEGORY IS NOT NULL
GROUP BY JOBCATEGORY;

--QUESTION 3C
SELECT JOBCATEGORY, COUNT(LOANDEFAULT) "FREQ OF DEFAULTED CUSTOMERS"
FROM CUSTOMERALL
WHERE JOBCATEGORY IS NOT NULL
GROUP BY JOBCATEGORY, LOANDEFAULT
ORDER BY COUNT(Loandefault);

--QUESTION 3D
SELECT JOBCATEGORY, COUNT(LOANDEFAULT) "FREQ OF DEFAULTED CUSTOMERS"
FROM CUSTOMERALL
WHERE JOBCATEGORY IS NOT NULL
GROUP BY JOBCATEGORY, LOANDEFAULT;












